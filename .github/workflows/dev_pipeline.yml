# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
      branches: [ "dev" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install
        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          REACT_APP_AUTH_URL: ${{secrets.AUTH_URL}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          SECRET_USERNAME: ${{secrets.SECRET_USERNAME}}
          SECRET_PASSWORD: ${{secrets.SECRET_PASSWORD}}
          REACT_APP_API_TOKEN: ${{secrets.TOKEN_API}}
          REACT_APP_GRAPHQL_SERVER: ${{secrets.GRAPHQL_API}}
        run: |
            touch .env
            echo "DATABASE_URL=$DATABASE_URL" >> .env
            echo "REACT_APP_AUTH_URL=$REACT_APP_AUTH_URL" >> .env
            echo "JWT_SECRET=$JWT_SECRET" >> .env
            echo "SECRET_USERNAME=$SECRET_USERNAME" >> .env
            echo "SECRET_PASSWORD=$SECRET_PASSWORD" >> .env
            echo "REACT_APP_API_TOKEN=$REACT_APP_API_TOKEN" >> .env
            echo "REACT_APP_GRAPHQL_SERVER=$REACT_APP_GRAPHQL_SERVER" >> .env
            npm install

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: |
            npm run test:build
            rm -rf src


